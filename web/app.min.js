const $=document.querySelector.bind(document),username=$("#name"),email=$("#email"),password=$("#password"),addUserBtn=$("#addUserBtn"),userCardTemplate=$("#userCard"),userList=$(".user-list");function createUserCard(e,s,r){const t=userCardTemplate.content.cloneNode(!0);return t.querySelector(".username").textContent=s,t.querySelector(".email").textContent=r,t.querySelector(".user-card").dataset.id=e,t.querySelector(".deleteBtn").addEventListener("click",s=>onUserDeletePressed(s.currentTarget,e)),t}async function onUserDeletePressed(e,s){if((await eel.delete_user(s)()).success){const e=$(`.user-card[data-id="${s}"]`);userList.removeChild(e)}}addUserBtn.addEventListener("click",async e=>{e.preventDefault();const s=username.value,r=email.value,t=password.value;if(!s||!r||!t)return;const a=await eel.add_new_user(JSON.stringify({name:s,email:r,password:t}))();if(a.success){username.value="",email.value="",password.value="";const e=createUserCard(a.id,s,r);userList.append(e)}}),window.onload=(async()=>{const e=await eel.get_all_users()();for(let s of e){const e=createUserCard(...Object.values(s));userList.appendChild(e)}}),window.onbeforeunload=(()=>{eel.close_connection()});